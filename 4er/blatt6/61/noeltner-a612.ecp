<?xml version="1.0" encoding="ASCII"?>
<org.eclipse.emf.emfstore.common.model:Project xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:org.eclipse.emf.emfstore.common.model="http://eclipse.org/emf/emfstore/common/model" xmlns:org.unicase.model.document="http://unicase.org/model/document" xmlns:org.unicase.model.testcase="http://unicase.org/model/testcase">
  <modelElements xsi:type="org.unicase.model.document:CompositeSection" name="Test Document">
    <subsections xsi:type="org.unicase.model.document:CompositeSection" name="Component Tests">
      <subsections xsi:type="org.unicase.model.document:LeafSection" name="Test Cases">
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testOverallRatingWithMovieAndFullListOfPerformers" description="This test case checks if the method overallRating of MovieUtil performs as expected for a given rating of a Movie and given List of ratings of Performers. " type="system" precondition="1 Movie with a rating&#xD;&#xA;1 List with 3 Performers with a rating&#xD;&#xA;" postcondition="overall rating of the sample movie is set to the calculated value" infrastructure="">
          <step name="Step 1" description="Movie overallRating is the sum of the input movie rating and the maximum rating of all input performer ratings. ">
            <input name="ratingMovie" type="Integer" range="between 0 and 5" value="3"/>
            <input name="ratingPerformers" type="ArrayList&lt;Integer>" range="each element of the list between 0 and 5" value="0,2,3"/>
            <output name="maximum" type="Integer" range="between 0 and 10" value="6"/>
          </step>
        </modelElements>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testShowAllFilmsWithPerformerWithAPerfomerWhoPlayedInNoFilmsAndAPerformerWhoPlayedInSomeFilms" description="This test case checks if the method showAllFilmsWithPerformer performs as expected for a given performer who does not star in any movies and a performer who did star in a number of movies." precondition="1 performer with no movies&#xA;1 performer with some movies" postcondition="No movies shown for first performer.&#xA;All movies starring second performer shown for second performer."/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testSearchWithNameFragment" description="This test case checks if the search function works as expected when given a fraction of a movie name." type="system" precondition="1 list of movies&#xA;1 string that is a substring of some of the movie names, but not of all" postcondition="List with only matching movies shown"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testMatchMovieWithIMDBWithValidFilmAndInvalidFilmAndNonexistantFilm" description="This test case checks if matchMovieWithIMDB works as expected by testing with a valid film that should not be altered and an invald film whose data should be replaced by that from IMDB.&#xA;As a third tetst, a nonexistant Film should not be altered, but an error message should be shown." type="system" precondition="Acces to IMDB&#xA;1 valid movie (data is correct)&#xA;1 invalid movie (data needs correction)&#xA;1 movie that cannot be found in IMDB" postcondition="valid movie is left unchanged&#xA;invalid movie now has valid data&#xA;nonexistant movie should be left as is, but an error message should be shown."/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testSuggestMovieWithSomeMovie" description="This test case checks if suggestMovie works as expected by testing with a movie." type="system" precondition="1 list of movies&#xA;1 movie" postcondition="List with matching movies shown. That is: All movies with same genre and same or better rating or same actors"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testUploadImagePreviewWithAMovieAndAnImage" description="This test case checks if uploadImagePreview works as expected by addind an image to a movie." precondition="1 movie shown without an image&#xA;1 image" postcondition="image is attatched to the movie&#xA;movie is shown with the image"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testSetMovieNameWithANamedMovieAndAnUnnamedMovie" description="This test case checks if setMovieName works as expected by renaming a movie and setting the name for a movie lacking a name so far" type="system" precondition="1 movie with a name&#xA;1 movie without a name&#xA;2 name strings" postcondition="first movie has first name&#xA;second movie has second name"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testSetIMDBLinkWithAmovieWithLinkAndAMovieWithoutALink" description="This test case checks if setIMDBLink works as expected by setting a link for a blank movie and a movie where a link is already present." type="system" precondition="1 movie with a link set&#xA;1 movie with no link set yet&#xA;2 links" postcondition="correct link set for both movies"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testAddMovieToOverview" description="This test case checks if addMovie works as expected by adding a movie to the Overview." type="integration" precondition="1 overview&#xA;1 movie" postcondition="movie added to overview"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testAddMovieCollectionToOverview" description="This test case checks if addMovieCollection works as expected by adding a movie collection to the overview" type="integration" precondition="1 overview&#xA;1 movie collection" postcondition="movie collection added to the overview"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testAddPerformerToOverview" description="This test case checks if addPerformer works as expected by adding a performer to the overview" precondition="1 overview&#xA;1 performer" postcondition="performer added to overview"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testListPerformersWithAFullListAndAnEmptyList" description="This test case checks if listPerformers works as expected by listing an empty list and a filled one" type="integration" precondition="1 empty film list&#xA;1 filled film list" postcondition="empty listing for empty list&#xA;films listed correctly for filled film list"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testListPerformersWithAnEmptyListAndAFilledList" description="This test case checks if listPerformers works as expected by listing an empty list of performers and a filled list." type="integration" precondition="1 empty list of performers&#xA;1 filled list of performes" postcondition="Empty listig for empty list&#xA;Correct listing for filled list"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testLoadProject" description="This test case checks if loadProject works as expected.&#xA;But since I don't know what this function is to do, I don't know how to do this, so this is just a stub." type="system" precondition="to be determined" postcondition="to be determinded"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testCreateProject" description="This test case checks if createProject works as expected.&#xA;But since I don't know what this function is to do, I don't know how to do this, so this is just a stub." type="system" precondition="to be determinded" postcondition="to be determinded"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testShareProject" description="This test case checks if shareProject works as expected.&#xA;But since I don't know what this function is to do, I don't know how to do this, so this is just a stub." type="system" precondition="to be determined" postcondition="to be determined"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testCommitProject" description="This test case checks if CommitProject works as expected.&#xA;But since I don't know what this function is to do, I don't know how to do this, so this is just a stub." type="system" precondition="to be determined" postcondition="to be determined"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testUpdateProject" description="This test case checks if updateProject works as expected.&#xA;But since I don't know what this function is to do, I don't know how to do this, so this is just a stub." type="system" precondition="to be determined" postcondition="to be determined"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testDeleteProject" description="This test case checks if deleteProject works as expected.&#xA;But since I don't know what this function is to do, I don't know how to do this, so this is just a stub." type="system" precondition="to be determined" postcondition="to be determined"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testCheckoutProject" description="This test case checks if checkoutProject works as expected.&#xA;But since I don't know what this function is to do, I don't know how to do this, so this is just a stub." type="system" precondition="to be determined" postcondition="to be determined"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testSortMoviesWithSomeMovies" description="This test case checks if sortMovies works as expected by sorting a list of movies" type="integration" precondition="1 list of movies" postcondition="movies are shown ordered"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testModifyMovieWithAMovie" description="This test case checks if modifyMovie works as expected by modifying a movie" type="system" precondition="1 movie&#xA;1 new attribute of each type" postcondition="all attributes changed to the new values"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testShowMovieWithAMovie" description="This test case checks if showMovie works as expected by showing the detail view for a movie" precondition="1 movie" postcondition="detail view for that movie is shown"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testRateMovieWithAMovie" description="This test case checks if rateMovie works as expected by rating a movie" type="system" precondition="1 movie&#xA;1 new rating" postcondition="rating set accordingly"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testWatchMovieWithAMovie" description="This test case checks if watchMovie works as expected by 'watching' a movie." type="integration" precondition="1 movie" postcondition="movie 'watched'/played"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testLoanMovieWithAMovie" description="This test case checks if loanMovie works as expected by loaning a movie." type="system" precondition="1 unloaned movie" postcondition="movie loaned"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testReceivedreturnedMovieWithAMovie" description="This test case checks if receivereturnedMovie works as expected by receivereturning (whatever that may be) a movie" type="system" precondition="1 movie not receivereturned (whatever that may be)" postcondition="movie is receivereturned (whatever that may be)"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testOverallRatingOfMovieWithAMovie" description="This test case checks if overallRatingOfMovie works as expected by getting the overall rating of a movie" type="system" precondition="1 movie with a rating of 7 (so that the IMDB rating has to be set, too)" postcondition="Returned Rating is 7"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testSortPerformerWithAListOfPerformers" description="This test case checks if sortPerformer works as expected by sorting a list of performers." type="integration" precondition="1 list of performers" postcondition="performers listed ordered"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testModifyPerformerWithAPerformer" description="This test case checks if modifyPerformer works as expeted by modifying all attributes of a performer" precondition="1 performer&#xA;1 new attribute of each type for performer" postcondition="all attributes for performer changed accordingly"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testDeletePerformerWithAPerformer" description="This test case checks if deletePerformer works as expected by deleting a performer" type="system" precondition="1 Performer" postcondition="performer deleted"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testShowPerformerWithAPerformer" description="This test case checks if showPerformer works as expected by showing the detail view of a performer" type="integration" precondition="1 performer whose detail view is not currently open" postcondition="detail view for the performer is opened"/>
        <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="testRatePerformerWithAPerformer" description="This test case checks if ratePerformer works as expected by rating a performer" type="system" precondition="1 performer&#xA;1 new rating" postcondition="rating set accordingly"/>
      </subsections>
      <subsections xsi:type="org.unicase.model.document:LeafSection" name="Test Protocols">
        <modelElements xsi:type="org.unicase.model.testcase:TestProtocol" name="testProtocol for testOverallRatingWithMovieAndNotEmptyListOfPerformers" description="This test protocol documents the result of the method overallRating with valid parameters" testState="passed" testCase="//@modelElements.0/@subsections.0/@subsections.0/@modelElements.0" testReport="overallRating of the sample Movie elemente is  6 as expected "/>
      </subsections>
    </subsections>
  </modelElements>
  <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="Copy of testOverallRatingWithMovieAndFullListOfPerformers" description="This test case checks if the method overallRating of MovieUtil performs as expected for a given rating of a Movie and given List of ratings of Performers. " precondition="1 Movie with a rating&#xD;&#xA;1 List with 3 Performers with a rating&#xD;&#xA;" postcondition="overall rating of the sample movie is set to the calculated value" infrastructure="">
    <step name="Step 1" description="Movie overallRating is the sum of the input movie rating and the maximum rating of all input performer ratings. ">
      <input name="ratingMovie" type="Integer" range="between 0 and 5" value="3"/>
      <input name="ratingPerformers" type="ArrayList&lt;Integer>" range="each element of the list between 0 and 5" value="0,2,3"/>
      <output name="maximum" type="Integer" range="between 0 and 10" value="6"/>
    </step>
  </modelElements>
  <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="Copy of testOverallRatingWithMovieAndFullListOfPerformers" description="This test case checks if the method overallRating of MovieUtil performs as expected for a given rating of a Movie and given List of ratings of Performers. " precondition="1 Movie with a rating&#xD;&#xA;1 List with 3 Performers with a rating&#xD;&#xA;" postcondition="overall rating of the sample movie is set to the calculated value" infrastructure="">
    <step name="Step 1" description="Movie overallRating is the sum of the input movie rating and the maximum rating of all input performer ratings. ">
      <input name="ratingMovie" type="Integer" range="between 0 and 5" value="3"/>
      <input name="ratingPerformers" type="ArrayList&lt;Integer>" range="each element of the list between 0 and 5" value="0,2,3"/>
      <output name="maximum" type="Integer" range="between 0 and 10" value="6"/>
    </step>
  </modelElements>
  <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="Copy of testShowAllFilmsWithPerformerWithAPerfomerWhoPlayedInNoFilmsAndAPerformerWhoPlayedInSomeFilms" description="This test case checks if the method showAllFilmsWithPerformer performs as expected for a given performer who does not star in any movies and a performer who did star in a number of movies." precondition="1 performer with no movies&#xA;1 performer with some movies" postcondition="No movies shown for first performer.&#xA;All movies starring second performer shown for second performer."/>
  <modelElements xsi:type="org.unicase.model.testcase:TestCase" name="Copy of testCreateProject" description="This test case checks if createProject works as expected.&#xA;But since I don't know what this function is to do, I don't know how to do this, so this is just a stub." precondition="to be determinded" postcondition="to be determinded"/>
</org.eclipse.emf.emfstore.common.model:Project>
